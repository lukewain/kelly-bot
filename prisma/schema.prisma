// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-py"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Permissions {
  create_reaction_roles
  delete_reaction_roles
  modify_reaction_roles
  send_announcements
  create_administrators
  remove_administrators
  full_permissions
}

model Admins {
  id                BigInt             @id
  added_by          BigInt? // If null then been added by console
  permissions       Permissions[]
  expires_at        DateTime? // If null then not a temp admin
  active            Boolean
  reaction_roles    ReactionRoles[]
  blacklisted_users BlacklistedUsers[]
}

model ReactionRoles {
  id         BigInt      @id // The reaction role message id which gets passed into the RR manager
  title      String
  descriptor String?
  reactions  Reactions[]
  created_by Admins?     @relation(fields: [adminId], references: [id])
  adminId    BigInt?
  active     Boolean     @default(true)
}

model BlacklistedUsers {
  id               BigInt   @id // User id
  blacklistedAt    DateTime
  blackistReason   String
  blacklistAdmin   Admins?  @relation(fields: [blacklistAdminId], references: [id])
  blacklistAdminId BigInt?
}

model Reactions {
  id                      Int            @id
  name                    String
  emoji_id                BigInt
  role_id                 BigInt
  attached_reaction_roles ReactionRoles? @relation(fields: [reactionRoleId], references: [id])
  reactionRoleId          BigInt
}
